> [FILE:create_map.py] Created a option to generate a trace for all variables - checkout the label [CHANGE-DOT] in program
> [FILE:create_map.py] Added the type of the variables in the trace map
> [FILE:create_map.py] Get the var type in the Decl and save in an attribute and then put in the log
> [FILE:create_map.py] Created a function to sort the type of the variable according our style in C LIB API
> [FILE:create_map.py] Added the type of the variable in the map list
> [FILE:map2chek-fortes.py] Added an option to choose among the complete track or partial (default)
> [FILE:write_new_instance.py] Added type in the function to map the variable track in the function mark_map_FORTES
> [SOLVED] to write in the new instance the global var
> [FILE:check_safety_memory_FORTES.c] Deleted tmp file generate by trace log
> [FILE:create_map.py] Updated auxiliary scripts to receive -t option from map2chek-fortes.py
> [FILE:write_graml_output.py] Created example to generate graphml
> [FILE:write_graphml_output.py] Added the nodes to the graphml
> [FILE:create_map.py] Added the option to gerate the trace in GraphML format
> [FILE:create_map.py] Created a method to generate the token data for GraphML format
> [FILE:complete_check.py] Fixed bug related to choose the option --graphml-output
> [FILE:write_graphml_output.py] Added the data token atributes to graphml
> [FILE:check_safety_memory_FORTES.c] Updated the functions in LIB to handle with type of the var
                ::Updated the function PRINT_TRACE_LOG to read from file tmp log
                    - Updated the header
                ::HIP2 (DONE): Write each action in the map list in a tmp file
> [FILE:write_new_instance.py] Added in the map list the var name to give as input to LIB
> [FILE:create_map.py] When tokenizer the program we not consider blank lines
> [FILE: configure.py] Added networkx in the install process
> [FILE: configure.py] Added c-tokenizer-x86_64-linux.zip in the install process
> [FILE:check_safety_memory_FORTES.c] Executes os.remove("/tmp/tmp_map_currentlog.tmp") in the C library to avoid troubles with multiples executions
> [FILE:write_graphml_output.py] Set the graphml attributes according to SVCOMP model


> [FILE:write_graphml_output.py] TODO: Update the assumption attribute to correct form

> [FILE:write_graphml_output.py] TODO: Validate the assumption write in case of pointer and arrays

> [FILE:write_graphml_output.py] TODO: Validate the assumption write in case of arrays
    ::BUG-ARRAY to print the array values from memory address


> [FILE:write_graphml_output.py] TODO: Adding support to functions in graphml

> [FILE:create_map.py] TODO: in the complete trace add the loop assignment, such as: i++






