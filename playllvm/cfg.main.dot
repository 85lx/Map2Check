digraph "CFG for 'main' function" {
	label="CFG for 'main' function";

	Node0x565419329ea0 [shape=record,label="{%0:\l  %1 = alloca i32, align 4\l  %2 = alloca i32, align 4\l  %3 = alloca i32, align 4\l  store i32 0, i32* %1, align 4\l  %4 = call i32 @__VERIFIER_nondet_uint()\l  store i32 %4, i32* %2, align 4\l  %5 = load i32, i32* %2, align 4\l  store i32 %5, i32* %3, align 4\l  %6 = load i32, i32* %2, align 4\l  %7 = icmp ult i32 %6, 5\l  %8 = zext i1 %7 to i32\l  %9 = call i32 (i32, ...) bitcast (i32 (...)* @__VERIFIER_assume to i32 (i32,\l... ...)*)(i32 %8)\l  br label %10\l}"];
	Node0x565419329ea0 -> Node0x56541932aa40;
	Node0x56541932aa40 [shape=record,label="{%10:\l\l  %11 = load i32, i32* %2, align 4\l  %12 = icmp ult i32 %11, 5\l  br i1 %12, label %13, label %18\l|{<s0>T|<s1>F}}"];
	Node0x56541932aa40:s0 -> Node0x56541932ac10;
	Node0x56541932aa40:s1 -> Node0x56541932ac60;
	Node0x56541932ac10 [shape=record,label="{%13:\l\l  %14 = load i32, i32* %2, align 4\l  %15 = add i32 %14, 1\l  store i32 %15, i32* %2, align 4\l  %16 = load i32, i32* %3, align 4\l  %17 = add i32 %16, 1\l  store i32 %17, i32* %3, align 4\l  br label %10\l}"];
	Node0x56541932ac10 -> Node0x56541932aa40;
	Node0x56541932ac60 [shape=record,label="{%18:\l\l  %19 = load i32, i32* %2, align 4\l  %20 = load i32, i32* %3, align 4\l  %21 = icmp ne i32 %19, %20\l  br i1 %21, label %22, label %25\l|{<s0>T|<s1>F}}"];
	Node0x56541932ac60:s0 -> Node0x56541932b270;
	Node0x56541932ac60:s1 -> Node0x56541932b2c0;
	Node0x56541932b270 [shape=record,label="{%22:\l\l  %23 = load i32, i32* %3, align 4\l  %24 = add i32 %23, 1\l  store i32 %24, i32* %3, align 4\l  br label %30\l}"];
	Node0x56541932b270 -> Node0x56541932b500;
	Node0x56541932b2c0 [shape=record,label="{%25:\l\l  %26 = load i32, i32* %2, align 4\l  %27 = add i32 %26, -1\l  store i32 %27, i32* %2, align 4\l  %28 = load i32, i32* %3, align 4\l  %29 = add i32 %28, -1\l  store i32 %29, i32* %3, align 4\l  br label %30\l}"];
	Node0x56541932b2c0 -> Node0x56541932b500;
	Node0x56541932b500 [shape=record,label="{%30:\l\l  %31 = load i32, i32* %2, align 4\l  %32 = load i32, i32* %3, align 4\l  %33 = icmp eq i32 %31, %32\l  %34 = zext i1 %33 to i32\l  call void @__VERIFIER_assert(i32 %34)\l  %35 = load i32, i32* %1, align 4\l  ret i32 %35\l}"];
}
